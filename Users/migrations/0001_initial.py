# Generated by Django 2.2.5 on 2019-09-11 19:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='full name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('mobile', models.CharField(blank=True, max_length=15, verbose_name='mobile')),
                ('user_type', models.CharField(choices=[('DEPARTMENT', 'Department'), ('SOCIETY', 'Society'), ('FACULTY', 'Faculty'), ('STUDENT', 'Student')], default='Student', max_length=15, verbose_name='user type')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='admin status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'STUDENT'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('registration_number', models.CharField(max_length=20)),
                ('batch', models.IntegerField(null=True)),
                ('program', models.CharField(max_length=80)),
                ('sex', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=10)),
                ('dob', models.DateField()),
                ('department', models.ForeignKey(limit_choices_to={'user_type': 'DEPARTMENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_department', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'FACULTY'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='faculty_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('designation', models.CharField(max_length=80)),
                ('sex', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=10)),
                ('dob', models.DateField()),
                ('department', models.ForeignKey(limit_choices_to={'user_type': 'DEPARTMENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='faculty_department', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
